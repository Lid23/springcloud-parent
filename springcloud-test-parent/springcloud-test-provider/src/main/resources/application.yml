server:
  port: 8801
  servlet:
    context-path: /springcloudtestprovider
spring:
  application:
    name: springcloud-test-provider
  profiles:
    include:
      - redis
      - security
  datasource:
    name: test
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: oracle.jdbc.driver.OracleDriver
      url: jdbc:oracle:thin:@10.168.12.41:1215:ryddb
      username: UAF_BHCRT
      password: Y_dev_u40_N_01
      # username: HA9XycbRAPmJBi/LlbuN/4bFZzqBn2IY1So9qZsLEZ1Cvcj81yjyzajOF/JMa7mkyaujop4K+CWfH5U5gSsPuw==
      # password: JWEr6MCBH6q4aK95OL8F4RATJ+GZKQfFx0ZIkvAtnaxiT0Y8PjEx4295T18X0NVbUWnqMuvGlJzyXRSLxnekCQ==
      # public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANMZW5U6obDsbioc/mnWftmt4acy4SNtF6RAa+xZeVh9Lb0pshmCg5Bh19Fr8/e6p1Z3NTSfP1YOTdhCRJACjCECAwEAAQ==
      validation-query: "SELECT 'X' FROM DUAL"     #数据库连接验证
      min-idle: 5                                  #数据库连接池的最小维持连接数
      initial-size: 5                              #初始化提供的连接数
      max-active: 10                               #最大的连接数
      max-wait: 200                                #等待连接获取的最大超时时间(毫秒)
      validation-query-timeout: 10                 #确认连接有效SQL的执行查询超时时间（秒）
      test-while-idle: true                        #假如一个对象验证失败，则对象将被从池中释放
      # connectionProperties: config.decrypt=true;config.decrypt.key=${spring.datasource.public-key}        #配置ConfigFilter解密密码
      filters: config,stat,wall,log4j
mybatis:
  config-location: classpath:com/noodles/springcloudtestprovider/springbootmybatis/mapper/mybatis.cfg.xml
  type-aliases-package: com.noodles.springcloudtestprovider.springbootmybatis.bean                                            #实体类所在包
  mapper-locations: classpath:com/noodles/springcloudtestprovider/springbootmybatis/mapper/*Mapper.xml                        #mapper配置文件

eureka:
  client:
    service-url:
      defaultZone: http://yrz_eureka:yrz_eureka@10.168.96.41:8101/eureka/,http://yrz_eureka:yrz_eureka@10.168.96.41:8102/eureka/,http://yrz_eureka:yrz_eureka@10.168.96.41:8103/eureka/
    registry-fetch-interval-seconds: 3                                #表示eureka client间隔多久去拉取服务注册信息，默认为30秒
  instance:
    health-check-url-path: ${server.servlet.context-path}/actuator/health
    home-page-url-path: ${server.servlet.context-path}
    status-page-url-path: ${server.servlet.context-path}/actuator/info
    metadata-map:                                                     #元数据设置
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
      management:
        context-path: ${server.servlet.context-path}/actuator         #将此路径追加到服务URL中
      gated-launch: true                                              #灰度调用
    lease-renewal-interval-in-seconds: 5                              #设置心跳的时间间隔（默认是30秒）
    lease-expiration-duration-in-seconds: 15                          #上一次收到client的心跳之后,等待下一次心跳的超时时间（默认是90秒）
    instance-id: ${spring.application.name}:${random.int}             #在信息列表时显示主机名称
    prefer-ip-address: true                                           #灰度调用

